---
const pages = [
  {
    slug: 'Turpan',
    work: 'tu',
    route: 'Turpan',
  },
  {
    slug: 'Unnoticed',
    work: 'un',
    route: 'Unnoticed',
  },
  {
    slug: 'Another_Landscape',
    work: 'al',
    route: 'Another Landscape',
  },
  // {
  //   slug: 'Never_Know_How_Much_I_Love_You',
  //   work: 'ne',
  //   route: 'Never Know How Much I Love You',
  // },
];
---

<div
  class="header flex items-center md:grid md:grid-cols-8 md:min-w-65ch md:max-w-65ch mx-auto  w-full md:justify-center justify-between gap-4 p-5 font-sans font-thin italic transition-opacity ease"
>
<!-- <a class="i-mdi-chevron-left text-xl hidden md:block opacity-30 hover:opacity-100 col-span-2" href="/"/> -->
<a class="hidden! md:block! opacity-30 hover:opacity-100 col-span-2 w-min flex justify-center" href="/">
  <div class=" flex justify-center items-center">
    <i class="i-mdi-chevron-left inline-block"/>
    <p class="inline-block text-sm">Catalog</p>
  </div>
</a>
<div class="flex items-center justify-center col-span-4">
  {
    pages.map((p) => {
      return (
        <a
          href={`/${p.slug}`}
          class:list={[
            'p-2',
            'tabItem',
            'z-20',
            'md:text-sm',
            {
              'hidden md:block md:opacity-30 md:hover:opacity-50':
                !Astro.url.pathname.includes(p.slug),
            },
          ]}
        >
          {p.route}
        </a>
      )
    })
  }
</div>
  <div class="catalogToggle md:hidden relative w-5 h-4 mr-2 z-40">
    <span class="stroke"/>
    <span class="stroke"/>
    <span class="stroke"/>
  </div>
</div>
<div class="catalog">
  <div class="flex flex-col items-center w-full mt-20">
  {
    pages.map((p) => {
      return (
        <a
          href={`/${p.slug}`}
          class:list={[
            'p-2',
            ' font-sans font-thin italic',
            {
              'opacity-30 hover:opacity-50':
              !Astro.url.pathname.includes(p.slug),
            },
          ]}
        >
          {p.route}
        </a>
      )
    })
  }
  </div>
</div>
<div>

</div>
<script>
const catalogToggle = document.querySelector('.catalogToggle')!
const catalog = document.querySelector('.catalog')!
const tabItems = document.querySelectorAll('.tabItem')!
const header = document.querySelector('.header')!
let catalogOpen = false
catalog!.addEventListener('touchmove', (e) => {
  if (catalogOpen)
    e.preventDefault()
})
catalog!.addEventListener('wheel', (e) => {
  if (catalogOpen)
    e.preventDefault()
})
const toggleCatlog = () => {
  catalogToggle!.classList.toggle('open')
  catalog!.classList.toggle('open')
  tabItems.forEach((i) => {
    i!.classList.toggle('opacity-0')
  })
  catalogOpen = !catalogOpen
}
catalogToggle!.addEventListener('click', toggleCatlog)
const md = 768
window.addEventListener('resize', () => {
  const curWidth = window.innerWidth
  if (curWidth > md) {
    catalogToggle.classList.remove('open')
    catalog.classList.remove('open')
    tabItems.forEach((i) => {
      i!.classList.remove('opacity-0')
    })
    catalogOpen = !catalogOpen
  }
})

let currentYPostion
let isDown
const dynamicNav = () => {
  header.classList.toggle('opacity-0', isDown)
}
window.addEventListener('scroll', () => {
  currentYPostion = window.scrollY
  isDown = currentYPostion > 20
  dynamicNav()
})
</script>

<style>
.stroke{
  @apply h-0.5 w-5 bg-black dark:bg-white
}
.catalogToggle .stroke:nth-child(1){
  @apply top-0
}
.catalogToggle .stroke:nth-child(2){
  @apply top-2
}
.catalogToggle .stroke:nth-child(3){
  @apply top-4
}
.catalogToggle .stroke{
  @apply absolute
}
.catalogToggle.open .stroke:nth-child(1){
  @apply top-2 rotate-45
}
.catalogToggle.open .stroke:nth-child(2){
  @apply top-2 translate-x-1 opacity-0
}
.catalogToggle.open .stroke:nth-child(3){
  @apply top-2 -rotate-45
}
.catalog{
  @apply -translate-y-20 hidden opacity-0 bg-white fixed dark:bg-black
}
.catalog.open{
  @apply opacity-100 translate-y-0 flex flex-col items-center p-5 w-full h-screen top-0 md:hidden
}
</style>
