---

---

<canvas
  class={`fixed inset-0 w-full h-full pointer-events-none mix-blend-overlay`}
  id="noise-canvas"></canvas>

<script is:inline>
  const density = 0.15;
  let opacity = 0.4;
  let color = "#FCFAF2";
  const particleSize = 2; // 默认颗粒大小为 1px
  const canvas = document.getElementById("noise-canvas");
  if (canvas) {
    const ctx = canvas.getContext("2d");
    if (ctx) {
      const dpr = window.devicePixelRatio;
      const updateCanvas = () => {
        canvas.width = window.innerWidth * dpr;
        canvas.height = window.innerHeight * dpr;
        ctx.scale(dpr, dpr);
      };

      const drawNoise = () => {
        const imageData = ctx.createImageData(canvas.width, canvas.height);
        const data = imageData.data;

        const r = parseInt(color.slice(1, 3), 16);
        const g = parseInt(color.slice(3, 5), 16);
        const b = parseInt(color.slice(5, 7), 16);

        for (let i = 0; i < data.length; i += 4) {
          if (Math.random() < density) {
            for (let dx = 0; dx < particleSize; dx++) {
              for (let dy = 0; dy < particleSize; dy++) {
                const pixelIndex = i + (dy * canvas.width + dx) * 4;
                if (pixelIndex < data.length) {
                  data[pixelIndex] = r; // R
                  data[pixelIndex + 1] = g; // G
                  data[pixelIndex + 2] = b; // B
                  data[pixelIndex + 3] = opacity * 255; // A
                }
              }
            }
          }
        }

        ctx.putImageData(imageData, 0, 0);
      };

      const handleResize = () => {
        updateCanvas();
        drawNoise();
      };

      handleResize();
      window.addEventListener("resize", handleResize);
    }
  }
</script>
